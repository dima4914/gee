# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GEEManagerDialog
                                 A QGIS plugin
 This plugin implements user-friendly interface (GUI) to make access to Goggle Earth Engine server easier
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2020-12-31
        git sha              : $Format:%H$
        copyright            : (C) 2020 by Dima Okunev
        email                : dima@
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import sys

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
#import .basic
#from .geeGUI_dialog_base import Ui_GEEManagerDialogBase as FORM_CLASS

#sys.path.append(os.path.dirname(__file__))
# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'geeGUI_dialog_base.ui'))
KERNEL_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'kernelGUI.ui'))
DOWNLOAD_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'downloadGUI.ui'))


class KernelDialog(QtWidgets.QWidget, KERNEL_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(KernelDialog, self).__init__(parent)
        self.setupUi(self)


class DownloadDialog(QtWidgets.QWidget, DOWNLOAD_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(DownloadDialog, self).__init__(parent)
        self.setupUi(self)


class GEEManagerDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(GEEManagerDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)
        self.panels = {
            '  Download dataset': DownloadDialog(),
            '  Apply kernels': KernelDialog(),
            '  Estimate indices': DownloadDialog(),
            '  Export': KernelDialog()
        }
        self.stackLayout = QtWidgets.QStackedLayout()
        self.base_window.setLayout(self.stackLayout)
        for i in self.panels:
            self.stackLayout.addWidget(self.panels[i])
        self.stackLayout.setCurrentIndex(0)
        self.menu.itemClicked.connect(lambda x: self.stackLayout.setCurrentWidget(self.panels[x.text()]))

